<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".txt" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 4.0.30319.42000
//     Generated at <#=DateTime.Now#>
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     This file is a T4 Text Template for change automatically this 
//     project files version.
//
//     Affected files:
//
//         1. Assembly Version
// </auto-generated>
//------------------------------------------------------------------------------

<#
    string path =  Host.ResolvePath(".."); // path is: TeleBotMessenger\src\
		
	var AssemblyFilePath = Path.Combine(path, "TeleBotMessenger\\Properties\\AssemblyInfo.cs");

	//========================================== Assembly File ==================================================
    string newVersion = null;
	if(File.Exists(AssemblyFilePath)) 
	{
		var AssemblyFileData = File.ReadAllText(AssemblyFilePath);
		
	var asmVerPattern = @"(\[assembly: [\w\.]*Version\("")(?<asmVer>[\d+\.\d+]*)(""\)\])";
        var match = Regex.Match(AssemblyFileData, asmVerPattern);
        var gAsmVer = match.Groups["asmVer"].Value;
        var oldVersion = new Version(gAsmVer);

        // Compile new version  [major.minor.build] = 2.4.99
        if (oldVersion.Build >= 99)
        {
            newVersion = oldVersion.Minor >= 99 
                ? new Version(oldVersion.Major + 1, 0, 0).ToString()
                : new Version(oldVersion.Major, oldVersion.Minor + 1, 0).ToString();
        }
        else
        {
            newVersion = new Version(oldVersion.Major, oldVersion.Minor, oldVersion.Build + 1).ToString();
        }
        // 
        // Set new version in target files
        AssemblyFileData = Regex.Replace(AssemblyFileData, asmVerPattern, m => m.Groups[1].Value + newVersion + m.Groups[2].Value);
        File.WriteAllText(AssemblyFilePath, AssemblyFileData);
	}
	//========================================== Assembly File ==================================================
	//===========================================================================================================

#>